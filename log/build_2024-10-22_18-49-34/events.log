[0.000000] (-) TimerEvent: {}
[0.000347] (turtlebot3_gazebo) JobQueued: {'identifier': 'turtlebot3_gazebo', 'dependencies': OrderedDict()}
[0.000497] (turtlebot3_navigation) JobQueued: {'identifier': 'turtlebot3_navigation', 'dependencies': OrderedDict()}
[0.000547] (turtlebot3_gazebo) JobStarted: {'identifier': 'turtlebot3_gazebo'}
[0.009090] (turtlebot3_navigation) JobStarted: {'identifier': 'turtlebot3_navigation'}
[0.017545] (turtlebot3_gazebo) JobProgress: {'identifier': 'turtlebot3_gazebo', 'progress': 'cmake'}
[0.019324] (turtlebot3_gazebo) JobProgress: {'identifier': 'turtlebot3_gazebo', 'progress': 'build'}
[0.019517] (turtlebot3_gazebo) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_gazebo', '--', '-j8', '-l8'], 'cwd': '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_gazebo', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_AU:en'), ('USER', 'lucaslapdoglinux'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs/lib:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces/lib:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk/lib:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/lucaslapdoglinux'), ('OLDPWD', '/home/lucaslapdoglinux/major_prok_ws'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1043'), ('SYSTEMD_EXEC_PID', '1427'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '3294'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install:/home/lucaslapdoglinux/major_prok_ws/install:/home/lucaslapdoglinux/ros2_practice_ws/install:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'lucaslapdoglinux'), ('JOURNAL_STREAM', '8:16386'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'lucaslapdoglinux'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '1'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/lucaslapdoglinux-Inspiron-5584:@/tmp/.ICE-unix/1200,unix/lucaslapdoglinux-Inspiron-5584:/tmp/.ICE-unix/1200'), ('INVOCATION_ID', '6a079a956f904031952c0441a037697a'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('IBUS_DISABLE_SNOOPER', '1'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.87V7V2'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('ROS_DOMAIN_ID', '22'), ('AMENT_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_bringup:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_node:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_navigation2:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_description:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_cartographer:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_examples:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_navigation:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:4ff8ffbc-aa30-410f-a015-495ac5f0d83f'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_gazebo'), ('TURTLEBOT3_MODEL', 'burger'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop/lib/python3.10/site-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example/lib/python3.10/site-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math/lib/python3.10/site-packages:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math/lib/python3.10/site-packages:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_bringup:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_node:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_navigation2:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_description:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_cartographer:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_examples:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_navigation:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math:/opt/ros/humble')]), 'shell': False}
[0.023242] (turtlebot3_navigation) JobProgress: {'identifier': 'turtlebot3_navigation', 'progress': 'cmake'}
[0.024641] (turtlebot3_navigation) JobProgress: {'identifier': 'turtlebot3_navigation', 'progress': 'build'}
[0.025196] (turtlebot3_navigation) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_navigation', '--', '-j8', '-l8'], 'cwd': '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_navigation', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_AU:en'), ('USER', 'lucaslapdoglinux'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs/lib:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces/lib:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk/lib:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/lucaslapdoglinux'), ('OLDPWD', '/home/lucaslapdoglinux/major_prok_ws'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1043'), ('SYSTEMD_EXEC_PID', '1427'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '3294'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install:/home/lucaslapdoglinux/major_prok_ws/install:/home/lucaslapdoglinux/ros2_practice_ws/install:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'lucaslapdoglinux'), ('JOURNAL_STREAM', '8:16386'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'lucaslapdoglinux'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '1'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/lucaslapdoglinux-Inspiron-5584:@/tmp/.ICE-unix/1200,unix/lucaslapdoglinux-Inspiron-5584:/tmp/.ICE-unix/1200'), ('INVOCATION_ID', '6a079a956f904031952c0441a037697a'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('IBUS_DISABLE_SNOOPER', '1'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.87V7V2'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('ROS_DOMAIN_ID', '22'), ('AMENT_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_bringup:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_node:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_navigation2:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_description:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_cartographer:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_examples:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_navigation:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:4ff8ffbc-aa30-410f-a015-495ac5f0d83f'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_navigation'), ('TURTLEBOT3_MODEL', 'burger'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop/lib/python3.10/site-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example/lib/python3.10/site-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math/lib/python3.10/site-packages:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math/lib/python3.10/site-packages:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_bringup:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_node:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_navigation2:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_description:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_cartographer:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_examples:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_navigation:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math:/opt/ros/humble')]), 'shell': False}
[0.086628] (turtlebot3_gazebo) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target turtlebot3_shop_keeper\x1b[0m\n'}
[0.093979] (turtlebot3_navigation) StdoutLine: {'line': b'[100%] Built target turtlebot3_shop_navigator\n'}
[0.099143] (-) TimerEvent: {}
[0.102042] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 15%] Built target obstacle1\n'}
[0.103675] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 30%] Built target obstacles\n'}
[0.105426] (turtlebot3_navigation) CommandEnded: {'returncode': 0}
[0.121867] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 46%] Built target obstacle2\n'}
[0.133080] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 61%] \x1b[32mBuilding CXX object CMakeFiles/turtlebot3_shop_keeper.dir/src/main.cpp.o\x1b[0m\n'}
[0.133461] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 61%] \x1b[32mBuilding CXX object CMakeFiles/turtlebot3_shop_keeper.dir/src/InventoryWaypointsNode.cpp.o\x1b[0m\n'}
[0.146999] (turtlebot3_navigation) JobProgress: {'identifier': 'turtlebot3_navigation', 'progress': 'install'}
[0.157256] (turtlebot3_navigation) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_navigation'], 'cwd': '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_navigation', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_AU:en'), ('USER', 'lucaslapdoglinux'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs/lib:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces/lib:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk/lib:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/lucaslapdoglinux'), ('OLDPWD', '/home/lucaslapdoglinux/major_prok_ws'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1043'), ('SYSTEMD_EXEC_PID', '1427'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '3294'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install:/home/lucaslapdoglinux/major_prok_ws/install:/home/lucaslapdoglinux/ros2_practice_ws/install:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'lucaslapdoglinux'), ('JOURNAL_STREAM', '8:16386'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'lucaslapdoglinux'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '1'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/lucaslapdoglinux-Inspiron-5584:@/tmp/.ICE-unix/1200,unix/lucaslapdoglinux-Inspiron-5584:/tmp/.ICE-unix/1200'), ('INVOCATION_ID', '6a079a956f904031952c0441a037697a'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('IBUS_DISABLE_SNOOPER', '1'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.87V7V2'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('ROS_DOMAIN_ID', '22'), ('AMENT_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_bringup:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_node:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_navigation2:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_description:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_cartographer:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_examples:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_navigation:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:4ff8ffbc-aa30-410f-a015-495ac5f0d83f'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_navigation'), ('TURTLEBOT3_MODEL', 'burger'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop/lib/python3.10/site-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example/lib/python3.10/site-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math/lib/python3.10/site-packages:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math/lib/python3.10/site-packages:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_bringup:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_node:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_navigation2:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_description:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_cartographer:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_examples:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_navigation:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math:/opt/ros/humble')]), 'shell': False}
[0.166077] (turtlebot3_navigation) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[0.166464] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/lib/turtlebot3_navigation/turtlebot3_shop_navigator\n'}
[0.166726] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/include/\n'}
[0.166840] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/include//turtlebot3_navigation\n'}
[0.167033] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/include//turtlebot3_navigation/MotionController.hpp\n'}
[0.167267] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/include//turtlebot3_navigation/GoalNavigatorNode.hpp\n'}
[0.167559] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/include//turtlebot3_navigation/Constants.hpp\n'}
[0.167682] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/include//turtlebot3_navigation/MapManager.hpp\n'}
[0.167889] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/include//turtlebot3_navigation/SensorProcessor.hpp\n'}
[0.168067] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/ament_index/resource_index/package_run_dependencies/turtlebot3_navigation\n'}
[0.168302] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/ament_index/resource_index/parent_prefix_path/turtlebot3_navigation\n'}
[0.168427] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/environment/ament_prefix_path.sh\n'}
[0.168583] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/environment/ament_prefix_path.dsv\n'}
[0.168737] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/environment/path.sh\n'}
[0.168923] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/environment/path.dsv\n'}
[0.169068] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/local_setup.bash\n'}
[0.169201] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/local_setup.sh\n'}
[0.169334] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/local_setup.zsh\n'}
[0.169488] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/local_setup.dsv\n'}
[0.169646] (turtlebot3_navigation) StdoutLine: {'line': b'-- Installing: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/package.dsv\n'}
[0.169874] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/ament_index/resource_index/packages/turtlebot3_navigation\n'}
[0.170741] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/cmake/ament_cmake_export_include_directories-extras.cmake\n'}
[0.170868] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/cmake/ament_cmake_export_dependencies-extras.cmake\n'}
[0.170985] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/cmake/turtlebot3_navigationConfig.cmake\n'}
[0.171083] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/cmake/turtlebot3_navigationConfig-version.cmake\n'}
[0.171176] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/package.xml\n'}
[0.171402] (turtlebot3_navigation) CommandEnded: {'returncode': 0}
[0.199177] (-) TimerEvent: {}
[0.221871] (turtlebot3_navigation) JobEnded: {'identifier': 'turtlebot3_navigation', 'rc': 0}
[0.299279] (-) TimerEvent: {}
[0.399593] (-) TimerEvent: {}
[0.499866] (-) TimerEvent: {}
[0.600163] (-) TimerEvent: {}
[0.700438] (-) TimerEvent: {}
[0.800758] (-) TimerEvent: {}
[0.901064] (-) TimerEvent: {}
[1.001339] (-) TimerEvent: {}
[1.101633] (-) TimerEvent: {}
[1.202024] (-) TimerEvent: {}
[1.302314] (-) TimerEvent: {}
[1.402642] (-) TimerEvent: {}
[1.502960] (-) TimerEvent: {}
[1.603233] (-) TimerEvent: {}
[1.703540] (-) TimerEvent: {}
[1.803871] (-) TimerEvent: {}
[1.904174] (-) TimerEvent: {}
[2.004481] (-) TimerEvent: {}
[2.104803] (-) TimerEvent: {}
[2.205112] (-) TimerEvent: {}
[2.305430] (-) TimerEvent: {}
[2.405779] (-) TimerEvent: {}
[2.506116] (-) TimerEvent: {}
[2.606556] (-) TimerEvent: {}
[2.706990] (-) TimerEvent: {}
[2.807305] (-) TimerEvent: {}
[2.907622] (-) TimerEvent: {}
[3.007928] (-) TimerEvent: {}
[3.108225] (-) TimerEvent: {}
[3.208519] (-) TimerEvent: {}
[3.308869] (-) TimerEvent: {}
[3.409212] (-) TimerEvent: {}
[3.509510] (-) TimerEvent: {}
[3.609854] (-) TimerEvent: {}
[3.708369] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KInventoryWaypointsNode::InventoryWaypointsNode()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.708770] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:58:90:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[3.708910] (turtlebot3_gazebo) StderrLine: {'line': b'   58 |     std::bind(&InventoryWaypointsNode::goal_result_callback, this, std::placeholders::_1)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[3.709156] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.709284] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[3.709388] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[3.709491] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[3.709597] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[3.709701] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.709809] (turtlebot3_gazebo) StderrLine: {'line': b'  363 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[3.709903] (-) TimerEvent: {}
[3.710038] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.710157] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[3.710277] (turtlebot3_gazebo) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > > >&; _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.710417] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.710550] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:58:90:\x1b[m\x1b[K   required from here\n'}
[3.710659] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.710769] (turtlebot3_gazebo) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[3.710872] (turtlebot3_gazebo) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.710973] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.711079] (turtlebot3_gazebo) StderrLine: {'line': b'  374 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[3.711201] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.711307] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[3.711411] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:58:90:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.711535] (turtlebot3_gazebo) StderrLine: {'line': b'   58 |     std::bind(&InventoryWaypointsNode::goal_result_callback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[3.711640] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                                          \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.711742] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[3.711840] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[3.711942] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[3.712044] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[3.712162] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.712286] (turtlebot3_gazebo) StderrLine: {'line': b'  391 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[3.712388] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.712486] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[3.712604] (turtlebot3_gazebo) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > > >; _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.712734] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.712853] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:58:90:\x1b[m\x1b[K   required from here\n'}
[3.712953] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.713056] (turtlebot3_gazebo) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[3.713164] (turtlebot3_gazebo) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.713273] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.713377] (turtlebot3_gazebo) StderrLine: {'line': b'  399 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[3.713476] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.713572] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[3.713670] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:58:90:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.713790] (turtlebot3_gazebo) StderrLine: {'line': b'   58 |     std::bind(&InventoryWaypointsNode::goal_result_callback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[3.713898] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                                          \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[3.714000] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[3.714098] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[3.714220] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[3.714321] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[3.714434] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.714547] (turtlebot3_gazebo) StderrLine: {'line': b'  359 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[3.714647] (turtlebot3_gazebo) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.714746] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.714854] (turtlebot3_gazebo) StderrLine: {'line': b'  359 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[3.714952] (turtlebot3_gazebo) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.715047] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.715155] (turtlebot3_gazebo) StderrLine: {'line': b'  383 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[3.715265] (turtlebot3_gazebo) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.715362] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.715479] (turtlebot3_gazebo) StderrLine: {'line': b'  383 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[3.715580] (turtlebot3_gazebo) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[3.810048] (-) TimerEvent: {}
[3.910359] (-) TimerEvent: {}
[4.010688] (-) TimerEvent: {}
[4.111015] (-) TimerEvent: {}
[4.211316] (-) TimerEvent: {}
[4.311691] (-) TimerEvent: {}
[4.412020] (-) TimerEvent: {}
[4.487697] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client.hpp:43\x1b[m\x1b[K,\n'}
[4.488216] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/rclcpp_action.hpp:36\x1b[m\x1b[K,\n'}
[4.488435] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointManager.hpp:11\x1b[m\x1b[K,\n'}
[4.488577] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointGenerator.hpp:11\x1b[m\x1b[K,\n'}
[4.488714] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:14\x1b[m\x1b[K,\n'}
[4.488827] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[4.488938] (turtlebot3_gazebo) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.489076] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:137:7:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT>::publish_message_and_reset_measurements() [with CallbackMessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.489237] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:104:75:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.489385] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.489517] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.489656] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:55:123:\x1b[m\x1b[K   required from here\n'}
[4.489763] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:75:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[KFeedback\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.489886] (turtlebot3_gazebo) StderrLine: {'line': b'   75 |   using \x1b[01;31m\x1b[KFeedback\x1b[m\x1b[K = typename ActionT::Feedback;\n'}
[4.489993] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[4.490103] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:76:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[KResult\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.490233] (turtlebot3_gazebo) StderrLine: {'line': b'   76 |   using \x1b[01;31m\x1b[KResult\x1b[m\x1b[K = typename ActionT::Result;\n'}
[4.490348] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.490456] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:77:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[KFeedback\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.490582] (turtlebot3_gazebo) StderrLine: {'line': b'   77 |   using \x1b[01;31m\x1b[KFeedbackCallback\x1b[m\x1b[K =\n'}
[4.490697] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.490809] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:170\x1b[m\x1b[K,\n'}
[4.490920] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client.hpp:43\x1b[m\x1b[K,\n'}
[4.491030] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/rclcpp_action.hpp:36\x1b[m\x1b[K,\n'}
[4.491148] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointManager.hpp:11\x1b[m\x1b[K,\n'}
[4.491272] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointGenerator.hpp:11\x1b[m\x1b[K,\n'}
[4.491385] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:14\x1b[m\x1b[K,\n'}
[4.491497] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[4.491610] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle_impl.hpp:163:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[KFeedback\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.491738] (turtlebot3_gazebo) StderrLine: {'line': b'  163 | \x1b[01;31m\x1b[KClientGoalHandle<ActionT>\x1b[m\x1b[K::call_feedback_callback(\n'}
[4.491853] (turtlebot3_gazebo) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.491963] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client.hpp:43\x1b[m\x1b[K,\n'}
[4.492076] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/rclcpp_action.hpp:36\x1b[m\x1b[K,\n'}
[4.492219] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointManager.hpp:11\x1b[m\x1b[K,\n'}
[4.492335] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointGenerator.hpp:11\x1b[m\x1b[K,\n'}
[4.492446] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:14\x1b[m\x1b[K,\n'}
[4.492556] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[4.492667] (turtlebot3_gazebo) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >::WrappedResult\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.492780] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/future:1063:21:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::promise<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >::WrappedResult>\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.492894] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:159:31:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.493002] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:137:7:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT>::publish_message_and_reset_measurements() [with CallbackMessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.493117] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:104:75:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.493288] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.493454] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.493590] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:55:123:\x1b[m\x1b[K   required from here\n'}
[4.493711] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:72:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[KResult\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.493827] (turtlebot3_gazebo) StderrLine: {'line': b'   72 |     typename ActionT::Result::SharedPtr \x1b[01;31m\x1b[Kresult\x1b[m\x1b[K;\n'}
[4.493939] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.512157] (-) TimerEvent: {}
[4.612506] (-) TimerEvent: {}
[4.712827] (-) TimerEvent: {}
[4.813200] (-) TimerEvent: {}
[4.913635] (-) TimerEvent: {}
[5.014044] (-) TimerEvent: {}
[5.114426] (-) TimerEvent: {}
[5.140344] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[5.140923] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[5.141106] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.141354] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.141705] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.142127] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.142305] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.142406] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.142502] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.142597] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.142690] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[5.142787] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[5.142880] (turtlebot3_gazebo) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.142980] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.143098] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.143199] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.143279] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.143354] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:55:123:\x1b[m\x1b[K   required from here\n'}
[5.143408] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[5.143500] (turtlebot3_gazebo) StderrLine: {'line': b'  394 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[5.143553] (turtlebot3_gazebo) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.143606] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.143658] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.143710] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.143767] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.143818] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.143869] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.143921] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.143973] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.144025] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.144077] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.144128] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[5.144195] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[5.144247] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.144338] (turtlebot3_gazebo) StderrLine: {'line': b' 1461 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[5.144393] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.144445] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.144500] (turtlebot3_gazebo) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.144582] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1457:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.144771] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.144833] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.144917] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.144987] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.145058] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.145125] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:55:123:\x1b[m\x1b[K   required from here\n'}
[5.145192] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1375:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.145253] (turtlebot3_gazebo) StderrLine: {'line': b' 1375 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[5.145307] (turtlebot3_gazebo) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.145360] (turtlebot3_gazebo) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.145417] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.145494] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.145561] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.145632] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.145698] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:55:123:\x1b[m\x1b[K   required from here\n'}
[5.145758] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.145839] (turtlebot3_gazebo) StderrLine: {'line': b' 1398 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[5.145893] (turtlebot3_gazebo) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.145945] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.146029] (turtlebot3_gazebo) StderrLine: {'line': b' 1398 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[5.146082] (turtlebot3_gazebo) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.146139] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.146227] (turtlebot3_gazebo) StderrLine: {'line': b' 1399 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[5.146280] (turtlebot3_gazebo) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.146333] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose>::WrappedResult&)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.146420] (turtlebot3_gazebo) StderrLine: {'line': b' 1399 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[5.146472] (turtlebot3_gazebo) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.214530] (-) TimerEvent: {}
[5.314840] (-) TimerEvent: {}
[5.415116] (-) TimerEvent: {}
[5.515426] (-) TimerEvent: {}
[5.615760] (-) TimerEvent: {}
[5.716090] (-) TimerEvent: {}
[5.816382] (-) TimerEvent: {}
[5.916697] (-) TimerEvent: {}
[6.016988] (-) TimerEvent: {}
[6.117267] (-) TimerEvent: {}
[6.217599] (-) TimerEvent: {}
[6.317928] (-) TimerEvent: {}
[6.418222] (-) TimerEvent: {}
[6.518577] (-) TimerEvent: {}
[6.618870] (-) TimerEvent: {}
[6.719190] (-) TimerEvent: {}
[6.819482] (-) TimerEvent: {}
[6.919791] (-) TimerEvent: {}
[7.020096] (-) TimerEvent: {}
[7.120366] (-) TimerEvent: {}
[7.220686] (-) TimerEvent: {}
[7.321007] (-) TimerEvent: {}
[7.421277] (-) TimerEvent: {}
[7.521626] (-) TimerEvent: {}
[7.621964] (-) TimerEvent: {}
[7.722228] (-) TimerEvent: {}
[7.822578] (-) TimerEvent: {}
[7.922980] (-) TimerEvent: {}
[8.023365] (-) TimerEvent: {}
[8.123800] (-) TimerEvent: {}
[8.224206] (-) TimerEvent: {}
[8.324583] (-) TimerEvent: {}
[8.424891] (-) TimerEvent: {}
[8.525237] (-) TimerEvent: {}
[8.625588] (-) TimerEvent: {}
[8.725940] (-) TimerEvent: {}
[8.826318] (-) TimerEvent: {}
[8.864466] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[8.864983] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[8.865105] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/memory:64\x1b[m\x1b[K,\n'}
[8.865233] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[8.865343] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[8.865447] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[8.865547] (turtlebot3_gazebo) StderrLine: {'line': b'/usr/include/c++/11/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; _Args = {const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&}; _Tp = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.865677] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/alloc_traits.h:516:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; _Args = {const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&}; _Tp = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.865815] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/buffers/intra_process_buffer.hpp:169:34:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename std::enable_if<std::is_same<DestinationT, std::unique_ptr<MessageT, MessageDeleter> >::value>::type rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::add_shared_impl(rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr) [with DestinationT = std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >; MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; Alloc = std::allocator<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >; MessageDeleter = std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >; BufferT = std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >; typename std::enable_if<std::is_same<DestinationT, std::unique_ptr<MessageT, MessageDeleter> >::value>::type = void; rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr = std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.865946] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/buffers/intra_process_buffer.hpp:108:29:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::add_shared(rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; Alloc = std::allocator<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >; MessageDeleter = std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >; BufferT = std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >; rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr = std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.866071] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/buffers/intra_process_buffer.hpp:106:8:\x1b[m\x1b[K   required from here\n'}
[8.866187] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:162:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of deleted function \xe2\x80\x98\x1b[01m\x1b[Krclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >::ClientGoalHandle(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.866298] (turtlebot3_gazebo) StderrLine: {'line': b'  162 |         { \x1b[01;31m\x1b[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)\x1b[m\x1b[K; }\n'}
[8.866408] (turtlebot3_gazebo) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.866506] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client.hpp:43\x1b[m\x1b[K,\n'}
[8.866610] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/rclcpp_action.hpp:36\x1b[m\x1b[K,\n'}
[8.866708] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointManager.hpp:11\x1b[m\x1b[K,\n'}
[8.866816] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointGenerator.hpp:11\x1b[m\x1b[K,\n'}
[8.866913] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:14\x1b[m\x1b[K,\n'}
[8.867010] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[8.867107] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:59:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >::ClientGoalHandle(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)\x1b[m\x1b[K\xe2\x80\x99 is implicitly deleted because the default definition would be ill-formed:\n'}
[8.867242] (turtlebot3_gazebo) StderrLine: {'line': b'   59 | class \x1b[01;36m\x1b[KClientGoalHandle\x1b[m\x1b[K\n'}
[8.867339] (turtlebot3_gazebo) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.867430] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:59:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of deleted function \xe2\x80\x98\x1b[01m\x1b[Kstd::promise<_Res>::promise(const std::promise<_Res>&) [with _Res = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >::WrappedResult]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.867536] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18\x1b[m\x1b[K,\n'}
[8.867630] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.867721] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[8.867823] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[8.867915] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/future:1100:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[8.868007] (turtlebot3_gazebo) StderrLine: {'line': b' 1100 |       \x1b[01;36m\x1b[Kpromise\x1b[m\x1b[K(const promise&) = delete;\n'}
[8.868098] (turtlebot3_gazebo) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.868203] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client.hpp:43\x1b[m\x1b[K,\n'}
[8.868298] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/rclcpp_action.hpp:36\x1b[m\x1b[K,\n'}
[8.868388] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointManager.hpp:11\x1b[m\x1b[K,\n'}
[8.868479] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointGenerator.hpp:11\x1b[m\x1b[K,\n'}
[8.868569] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:14\x1b[m\x1b[K,\n'}
[8.868660] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[8.868751] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:59:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of deleted function \xe2\x80\x98\x1b[01m\x1b[Kstd::mutex::mutex(const std::mutex&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.868852] (turtlebot3_gazebo) StderrLine: {'line': b'   59 | class \x1b[01;31m\x1b[KClientGoalHandle\x1b[m\x1b[K\n'}
[8.868944] (turtlebot3_gazebo) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.869036] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/mutex:43\x1b[m\x1b[K,\n'}
[8.869128] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/future:38\x1b[m\x1b[K,\n'}
[8.869252] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18\x1b[m\x1b[K,\n'}
[8.869340] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.869427] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[8.869515] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[8.869616] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_mutex.h:94:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[8.869704] (turtlebot3_gazebo) StderrLine: {'line': b'   94 |     \x1b[01;36m\x1b[Kmutex\x1b[m\x1b[K(const mutex&) = delete;\n'}
[8.869792] (turtlebot3_gazebo) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.926442] (-) TimerEvent: {}
[9.026745] (-) TimerEvent: {}
[9.127068] (-) TimerEvent: {}
[9.227382] (-) TimerEvent: {}
[9.327722] (-) TimerEvent: {}
[9.428113] (-) TimerEvent: {}
[9.528481] (-) TimerEvent: {}
[9.628806] (-) TimerEvent: {}
[9.729120] (-) TimerEvent: {}
[9.829391] (-) TimerEvent: {}
[9.929716] (-) TimerEvent: {}
[10.030048] (-) TimerEvent: {}
[10.130333] (-) TimerEvent: {}
[10.143262] (turtlebot3_gazebo) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/turtlebot3_shop_keeper.dir/build.make:90: CMakeFiles/turtlebot3_shop_keeper.dir/src/InventoryWaypointsNode.cpp.o] Error 1\n'}
[10.143542] (turtlebot3_gazebo) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:143: CMakeFiles/turtlebot3_shop_keeper.dir/all] Error 2\n'}
[10.143805] (turtlebot3_gazebo) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[10.146180] (turtlebot3_gazebo) CommandEnded: {'returncode': 2}
[10.202894] (turtlebot3_gazebo) JobEnded: {'identifier': 'turtlebot3_gazebo', 'rc': 2}
[10.230103] (-) EventReactorShutdown: {}
