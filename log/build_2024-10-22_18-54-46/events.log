[0.000000] (-) TimerEvent: {}
[0.000453] (turtlebot3_gazebo) JobQueued: {'identifier': 'turtlebot3_gazebo', 'dependencies': OrderedDict()}
[0.000613] (turtlebot3_navigation) JobQueued: {'identifier': 'turtlebot3_navigation', 'dependencies': OrderedDict()}
[0.000635] (turtlebot3_gazebo) JobStarted: {'identifier': 'turtlebot3_gazebo'}
[0.010607] (turtlebot3_navigation) JobStarted: {'identifier': 'turtlebot3_navigation'}
[0.019692] (turtlebot3_gazebo) JobProgress: {'identifier': 'turtlebot3_gazebo', 'progress': 'cmake'}
[0.020643] (turtlebot3_gazebo) JobProgress: {'identifier': 'turtlebot3_gazebo', 'progress': 'build'}
[0.021603] (turtlebot3_gazebo) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_gazebo', '--', '-j8', '-l8'], 'cwd': '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_gazebo', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_AU:en'), ('USER', 'lucaslapdoglinux'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs/lib:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces/lib:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk/lib:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/lucaslapdoglinux'), ('OLDPWD', '/home/lucaslapdoglinux/major_prok_ws'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1043'), ('SYSTEMD_EXEC_PID', '1427'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '3294'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install:/home/lucaslapdoglinux/major_prok_ws/install:/home/lucaslapdoglinux/ros2_practice_ws/install:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'lucaslapdoglinux'), ('JOURNAL_STREAM', '8:16386'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'lucaslapdoglinux'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '1'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/lucaslapdoglinux-Inspiron-5584:@/tmp/.ICE-unix/1200,unix/lucaslapdoglinux-Inspiron-5584:/tmp/.ICE-unix/1200'), ('INVOCATION_ID', '6a079a956f904031952c0441a037697a'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('IBUS_DISABLE_SNOOPER', '1'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.87V7V2'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('ROS_DOMAIN_ID', '22'), ('AMENT_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_bringup:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_node:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_navigation2:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_description:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_cartographer:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_examples:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_navigation:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:4ff8ffbc-aa30-410f-a015-495ac5f0d83f'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_gazebo'), ('TURTLEBOT3_MODEL', 'burger'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop/lib/python3.10/site-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example/lib/python3.10/site-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math/lib/python3.10/site-packages:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math/lib/python3.10/site-packages:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_bringup:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_node:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_navigation2:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_description:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_cartographer:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_examples:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_navigation:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math:/opt/ros/humble')]), 'shell': False}
[0.025362] (turtlebot3_navigation) JobProgress: {'identifier': 'turtlebot3_navigation', 'progress': 'cmake'}
[0.027542] (turtlebot3_navigation) JobProgress: {'identifier': 'turtlebot3_navigation', 'progress': 'build'}
[0.027814] (turtlebot3_navigation) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_navigation', '--', '-j8', '-l8'], 'cwd': '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_navigation', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_AU:en'), ('USER', 'lucaslapdoglinux'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs/lib:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces/lib:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk/lib:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/lucaslapdoglinux'), ('OLDPWD', '/home/lucaslapdoglinux/major_prok_ws'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1043'), ('SYSTEMD_EXEC_PID', '1427'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '3294'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install:/home/lucaslapdoglinux/major_prok_ws/install:/home/lucaslapdoglinux/ros2_practice_ws/install:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'lucaslapdoglinux'), ('JOURNAL_STREAM', '8:16386'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'lucaslapdoglinux'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '1'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/lucaslapdoglinux-Inspiron-5584:@/tmp/.ICE-unix/1200,unix/lucaslapdoglinux-Inspiron-5584:/tmp/.ICE-unix/1200'), ('INVOCATION_ID', '6a079a956f904031952c0441a037697a'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('IBUS_DISABLE_SNOOPER', '1'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.87V7V2'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('ROS_DOMAIN_ID', '22'), ('AMENT_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_bringup:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_node:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_navigation2:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_description:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_cartographer:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_examples:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_navigation:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:4ff8ffbc-aa30-410f-a015-495ac5f0d83f'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_navigation'), ('TURTLEBOT3_MODEL', 'burger'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop/lib/python3.10/site-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example/lib/python3.10/site-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math/lib/python3.10/site-packages:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math/lib/python3.10/site-packages:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_bringup:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_node:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_navigation2:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_description:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_cartographer:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_examples:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_navigation:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math:/opt/ros/humble')]), 'shell': False}
[0.081365] (turtlebot3_gazebo) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target turtlebot3_shop_keeper\x1b[0m\n'}
[0.099518] (-) TimerEvent: {}
[0.103656] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 15%] Built target obstacles\n'}
[0.107518] (turtlebot3_navigation) StdoutLine: {'line': b'[100%] Built target turtlebot3_shop_navigator\n'}
[0.110447] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 30%] Built target obstacle2\n'}
[0.116109] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 46%] Built target obstacle1\n'}
[0.122868] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 53%] \x1b[32mBuilding CXX object CMakeFiles/turtlebot3_shop_keeper.dir/src/main.cpp.o\x1b[0m\n'}
[0.123103] (turtlebot3_navigation) CommandEnded: {'returncode': 0}
[0.125243] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 61%] \x1b[32mBuilding CXX object CMakeFiles/turtlebot3_shop_keeper.dir/src/InventoryWaypointsNode.cpp.o\x1b[0m\n'}
[0.163647] (turtlebot3_navigation) JobProgress: {'identifier': 'turtlebot3_navigation', 'progress': 'install'}
[0.173461] (turtlebot3_navigation) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_navigation'], 'cwd': '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_navigation', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_AU:en'), ('USER', 'lucaslapdoglinux'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs/lib:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces/lib:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk/lib:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/lucaslapdoglinux'), ('OLDPWD', '/home/lucaslapdoglinux/major_prok_ws'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1043'), ('SYSTEMD_EXEC_PID', '1427'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '3294'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install:/home/lucaslapdoglinux/major_prok_ws/install:/home/lucaslapdoglinux/ros2_practice_ws/install:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'lucaslapdoglinux'), ('JOURNAL_STREAM', '8:16386'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'lucaslapdoglinux'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '1'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/lucaslapdoglinux-Inspiron-5584:@/tmp/.ICE-unix/1200,unix/lucaslapdoglinux-Inspiron-5584:/tmp/.ICE-unix/1200'), ('INVOCATION_ID', '6a079a956f904031952c0441a037697a'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('IBUS_DISABLE_SNOOPER', '1'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.87V7V2'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('ROS_DOMAIN_ID', '22'), ('AMENT_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_bringup:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_node:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_navigation2:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_description:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_cartographer:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_examples:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_navigation:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:4ff8ffbc-aa30-410f-a015-495ac5f0d83f'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/build/turtlebot3_navigation'), ('TURTLEBOT3_MODEL', 'burger'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop/lib/python3.10/site-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example/lib/python3.10/site-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math/lib/python3.10/site-packages:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3/local/lib/python3.10/dist-packages:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math/lib/python3.10/site-packages:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_bringup:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_node:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_navigation2:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_msgs:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_description:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_cartographer:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_examples:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk_custom_interfaces:/home/lucaslapdoglinux/turtlebot3_ws/install/dynamixel_sdk:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_navigation:/home/lucaslapdoglinux/major_prok_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/install/navigation_tb3:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/turtlebot3_gazebo:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/transforms:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/point_cloud_perception:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/nodes:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/navigation_tb3:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_teleop:/home/lucaslapdoglinux/turtlebot3_ws/install/turtlebot3_example:/home/lucaslapdoglinux/ros2_practice_ws/install/robot_math:/home/lucaslapdoglinux/ros2_practice_ws/ros2_learners/install/robot_math:/opt/ros/humble')]), 'shell': False}
[0.180931] (turtlebot3_navigation) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[0.181234] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/lib/turtlebot3_navigation/turtlebot3_shop_navigator\n'}
[0.181438] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/include/\n'}
[0.181638] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/include//turtlebot3_navigation\n'}
[0.181839] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/include//turtlebot3_navigation/MotionController.hpp\n'}
[0.182048] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/include//turtlebot3_navigation/GoalNavigatorNode.hpp\n'}
[0.182291] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/include//turtlebot3_navigation/Constants.hpp\n'}
[0.182438] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/include//turtlebot3_navigation/MapManager.hpp\n'}
[0.182598] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/include//turtlebot3_navigation/SensorProcessor.hpp\n'}
[0.182734] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/ament_index/resource_index/package_run_dependencies/turtlebot3_navigation\n'}
[0.182871] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/ament_index/resource_index/parent_prefix_path/turtlebot3_navigation\n'}
[0.182992] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/environment/ament_prefix_path.sh\n'}
[0.183095] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/environment/ament_prefix_path.dsv\n'}
[0.183188] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/environment/path.sh\n'}
[0.183304] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/environment/path.dsv\n'}
[0.183417] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/local_setup.bash\n'}
[0.183512] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/local_setup.sh\n'}
[0.183604] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/local_setup.zsh\n'}
[0.183695] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/local_setup.dsv\n'}
[0.183786] (turtlebot3_navigation) StdoutLine: {'line': b'-- Installing: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/package.dsv\n'}
[0.183891] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/ament_index/resource_index/packages/turtlebot3_navigation\n'}
[0.183989] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/cmake/ament_cmake_export_include_directories-extras.cmake\n'}
[0.184081] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/cmake/ament_cmake_export_dependencies-extras.cmake\n'}
[0.184174] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/cmake/turtlebot3_navigationConfig.cmake\n'}
[0.184262] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/cmake/turtlebot3_navigationConfig-version.cmake\n'}
[0.184354] (turtlebot3_navigation) StdoutLine: {'line': b'-- Up-to-date: /home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/install/turtlebot3_navigation/share/turtlebot3_navigation/package.xml\n'}
[0.185091] (turtlebot3_navigation) CommandEnded: {'returncode': 0}
[0.199596] (-) TimerEvent: {}
[0.237231] (turtlebot3_navigation) JobEnded: {'identifier': 'turtlebot3_navigation', 'rc': 0}
[0.299745] (-) TimerEvent: {}
[0.400068] (-) TimerEvent: {}
[0.500369] (-) TimerEvent: {}
[0.600707] (-) TimerEvent: {}
[0.701074] (-) TimerEvent: {}
[0.801437] (-) TimerEvent: {}
[0.901813] (-) TimerEvent: {}
[1.002197] (-) TimerEvent: {}
[1.102577] (-) TimerEvent: {}
[1.202981] (-) TimerEvent: {}
[1.303377] (-) TimerEvent: {}
[1.403911] (-) TimerEvent: {}
[1.504429] (-) TimerEvent: {}
[1.604953] (-) TimerEvent: {}
[1.705470] (-) TimerEvent: {}
[1.805859] (-) TimerEvent: {}
[1.906208] (-) TimerEvent: {}
[2.006604] (-) TimerEvent: {}
[2.106945] (-) TimerEvent: {}
[2.207320] (-) TimerEvent: {}
[2.307733] (-) TimerEvent: {}
[2.408092] (-) TimerEvent: {}
[2.508479] (-) TimerEvent: {}
[2.608877] (-) TimerEvent: {}
[2.709258] (-) TimerEvent: {}
[2.809635] (-) TimerEvent: {}
[2.909941] (-) TimerEvent: {}
[3.010319] (-) TimerEvent: {}
[3.110704] (-) TimerEvent: {}
[3.211064] (-) TimerEvent: {}
[3.311447] (-) TimerEvent: {}
[3.411872] (-) TimerEvent: {}
[3.512277] (-) TimerEvent: {}
[3.612687] (-) TimerEvent: {}
[3.713089] (-) TimerEvent: {}
[3.813565] (-) TimerEvent: {}
[3.914099] (-) TimerEvent: {}
[4.014564] (-) TimerEvent: {}
[4.115138] (-) TimerEvent: {}
[4.215640] (-) TimerEvent: {}
[4.316131] (-) TimerEvent: {}
[4.416588] (-) TimerEvent: {}
[4.517103] (-) TimerEvent: {}
[4.617573] (-) TimerEvent: {}
[4.718179] (-) TimerEvent: {}
[4.818764] (-) TimerEvent: {}
[4.919327] (-) TimerEvent: {}
[5.019818] (-) TimerEvent: {}
[5.120329] (-) TimerEvent: {}
[5.220957] (-) TimerEvent: {}
[5.321411] (-) TimerEvent: {}
[5.421878] (-) TimerEvent: {}
[5.513691] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/main.cpp:3\x1b[m\x1b[K:\n'}
[5.514150] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:52:36:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.514404] (turtlebot3_gazebo) StderrLine: {'line': b'   52 |   std::shared_ptr<SensorProcessor> \x1b[01;31m\x1b[Ksensor_processor_\x1b[m\x1b[K;     // Sensor data processing component\n'}
[5.514641] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.521993] (-) TimerEvent: {}
[5.546264] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[5.546640] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:52:36:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.546912] (turtlebot3_gazebo) StderrLine: {'line': b'   52 |   std::shared_ptr<SensorProcessor> \x1b[01;31m\x1b[Ksensor_processor_\x1b[m\x1b[K;     // Sensor data processing component\n'}
[5.547154] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.570689] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KInventoryWaypointsNode::InventoryWaypointsNode()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.571084] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:28:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksensor_processor_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KSensorProcessor\x1b[m\x1b[K\xe2\x80\x99?\n'}
[5.571325] (turtlebot3_gazebo) StderrLine: {'line': b'   28 |   \x1b[01;31m\x1b[Ksensor_processor_\x1b[m\x1b[K = std::make_shared<SensorProcessor>();\n'}
[5.571550] (turtlebot3_gazebo) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.571774] (turtlebot3_gazebo) StderrLine: {'line': b'      |   \x1b[32m\x1b[KSensorProcessor\x1b[m\x1b[K\n'}
[5.622122] (-) TimerEvent: {}
[5.680652] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:58:90:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[5.681754] (turtlebot3_gazebo) StderrLine: {'line': b'   58 |     std::bind(&InventoryWaypointsNode::goal_result_callback, this, std::placeholders::_1)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.682044] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                                          \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.682282] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[5.682486] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[5.682827] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[5.683075] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[5.683283] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.683528] (turtlebot3_gazebo) StderrLine: {'line': b'  363 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[5.683734] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.683958] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.684167] (turtlebot3_gazebo) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > > >&; _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.684413] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.684652] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:58:90:\x1b[m\x1b[K   required from here\n'}
[5.684868] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.685101] (turtlebot3_gazebo) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[5.685301] (turtlebot3_gazebo) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.685501] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.685709] (turtlebot3_gazebo) StderrLine: {'line': b'  374 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[5.685942] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.686156] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.686355] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:58:90:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.686592] (turtlebot3_gazebo) StderrLine: {'line': b'   58 |     std::bind(&InventoryWaypointsNode::goal_result_callback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[5.686799] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                                          \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[5.687020] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[5.687226] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[5.687439] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[5.687655] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[5.687866] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.688099] (turtlebot3_gazebo) StderrLine: {'line': b'  391 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[5.688304] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.688495] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.688690] (turtlebot3_gazebo) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > > >; _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.688918] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.689162] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:58:90:\x1b[m\x1b[K   required from here\n'}
[5.689364] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.689569] (turtlebot3_gazebo) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[5.689763] (turtlebot3_gazebo) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.690005] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.690237] (turtlebot3_gazebo) StderrLine: {'line': b'  399 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[5.690445] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.690794] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.691027] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:58:90:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.691276] (turtlebot3_gazebo) StderrLine: {'line': b'   58 |     std::bind(&InventoryWaypointsNode::goal_result_callback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[5.691475] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                                          \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[5.691636] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[5.691792] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[5.691978] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[5.692154] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[5.692343] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.692544] (turtlebot3_gazebo) StderrLine: {'line': b'  359 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[5.692723] (turtlebot3_gazebo) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.692893] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.693105] (turtlebot3_gazebo) StderrLine: {'line': b'  359 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[5.693263] (turtlebot3_gazebo) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.693411] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.693565] (turtlebot3_gazebo) StderrLine: {'line': b'  383 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[5.693718] (turtlebot3_gazebo) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.693885] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.694095] (turtlebot3_gazebo) StderrLine: {'line': b'  383 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[5.694287] (turtlebot3_gazebo) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[5.722251] (-) TimerEvent: {}
[5.760694] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InventoryWaypointsNode::scan_callback(sensor_msgs::msg::LaserScan_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.761079] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:102:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksensor_processor_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KSensorProcessor\x1b[m\x1b[K\xe2\x80\x99?\n'}
[5.761307] (turtlebot3_gazebo) StderrLine: {'line': b'  102 |   \x1b[01;31m\x1b[Ksensor_processor_\x1b[m\x1b[K->process_scan(scan_msg);\n'}
[5.761510] (turtlebot3_gazebo) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.761712] (turtlebot3_gazebo) StderrLine: {'line': b'      |   \x1b[32m\x1b[KSensorProcessor\x1b[m\x1b[K\n'}
[5.780100] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InventoryWaypointsNode::odom_callback(nav_msgs::msg::Odometry_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.780483] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:108:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksensor_processor_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KSensorProcessor\x1b[m\x1b[K\xe2\x80\x99?\n'}
[5.780705] (turtlebot3_gazebo) StderrLine: {'line': b'  108 |   \x1b[01;31m\x1b[Ksensor_processor_\x1b[m\x1b[K->process_odom(odom_msg);\n'}
[5.780939] (turtlebot3_gazebo) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.781152] (turtlebot3_gazebo) StderrLine: {'line': b'      |   \x1b[32m\x1b[KSensorProcessor\x1b[m\x1b[K\n'}
[5.795075] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InventoryWaypointsNode::goal_result_callback(nav2_msgs::action::NavigateToPose::Result)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.795492] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:121:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kresult\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[5.795689] (turtlebot3_gazebo) StderrLine: {'line': b'  121 |   waypoint_manager_->process_goal_result(\x1b[01;31m\x1b[Kresult\x1b[m\x1b[K);\n'}
[5.795879] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[5.796075] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:119:99:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kgoal_result\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[5.796302] (turtlebot3_gazebo) StderrLine: {'line': b'  119 | void InventoryWaypointsNode::goal_result_callback(\x1b[01;35m\x1b[Kconst nav2_msgs::action::NavigateToPose::Result goal_result\x1b[m\x1b[K)\n'}
[5.796494] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                   \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.822375] (-) TimerEvent: {}
[5.922827] (-) TimerEvent: {}
[6.023291] (-) TimerEvent: {}
[6.123750] (-) TimerEvent: {}
[6.224199] (-) TimerEvent: {}
[6.324634] (-) TimerEvent: {}
[6.425083] (-) TimerEvent: {}
[6.502213] (turtlebot3_gazebo) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/turtlebot3_shop_keeper.dir/build.make:76: CMakeFiles/turtlebot3_shop_keeper.dir/src/main.cpp.o] Error 1\n'}
[6.502564] (turtlebot3_gazebo) StderrLine: {'line': b'gmake[2]: *** Waiting for unfinished jobs....\n'}
[6.525228] (-) TimerEvent: {}
[6.625645] (-) TimerEvent: {}
[6.726089] (-) TimerEvent: {}
[6.787878] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client.hpp:43\x1b[m\x1b[K,\n'}
[6.788379] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/rclcpp_action.hpp:36\x1b[m\x1b[K,\n'}
[6.788759] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointManager.hpp:11\x1b[m\x1b[K,\n'}
[6.788995] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointGenerator.hpp:11\x1b[m\x1b[K,\n'}
[6.789184] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:14\x1b[m\x1b[K,\n'}
[6.789364] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[6.789558] (turtlebot3_gazebo) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.789742] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:137:7:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT>::publish_message_and_reset_measurements() [with CallbackMessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.789960] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:104:75:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.790181] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.790435] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.790768] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:55:123:\x1b[m\x1b[K   required from here\n'}
[6.790977] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:75:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[KFeedback\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.791164] (turtlebot3_gazebo) StderrLine: {'line': b'   75 |   using \x1b[01;31m\x1b[KFeedback\x1b[m\x1b[K = typename ActionT::Feedback;\n'}
[6.791341] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.791515] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:76:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[KResult\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.791743] (turtlebot3_gazebo) StderrLine: {'line': b'   76 |   using \x1b[01;31m\x1b[KResult\x1b[m\x1b[K = typename ActionT::Result;\n'}
[6.791944] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[6.792135] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:77:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[KFeedback\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.792326] (turtlebot3_gazebo) StderrLine: {'line': b'   77 |   using \x1b[01;31m\x1b[KFeedbackCallback\x1b[m\x1b[K =\n'}
[6.792498] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.792677] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:170\x1b[m\x1b[K,\n'}
[6.792867] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client.hpp:43\x1b[m\x1b[K,\n'}
[6.793065] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/rclcpp_action.hpp:36\x1b[m\x1b[K,\n'}
[6.793242] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointManager.hpp:11\x1b[m\x1b[K,\n'}
[6.793421] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointGenerator.hpp:11\x1b[m\x1b[K,\n'}
[6.793597] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:14\x1b[m\x1b[K,\n'}
[6.793777] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[6.793976] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle_impl.hpp:163:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[KFeedback\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.794180] (turtlebot3_gazebo) StderrLine: {'line': b'  163 | \x1b[01;31m\x1b[KClientGoalHandle<ActionT>\x1b[m\x1b[K::call_feedback_callback(\n'}
[6.794359] (turtlebot3_gazebo) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.794540] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client.hpp:43\x1b[m\x1b[K,\n'}
[6.794738] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/rclcpp_action.hpp:36\x1b[m\x1b[K,\n'}
[6.794941] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointManager.hpp:11\x1b[m\x1b[K,\n'}
[6.795128] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointGenerator.hpp:11\x1b[m\x1b[K,\n'}
[6.795311] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:14\x1b[m\x1b[K,\n'}
[6.795506] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[6.795684] (turtlebot3_gazebo) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >::WrappedResult\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.795881] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/future:1063:21:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::promise<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >::WrappedResult>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.796077] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:159:31:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.796255] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:137:7:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT>::publish_message_and_reset_measurements() [with CallbackMessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.796443] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:104:75:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.796680] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.796946] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.797183] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:55:123:\x1b[m\x1b[K   required from here\n'}
[6.797372] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:72:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[KResult\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.797565] (turtlebot3_gazebo) StderrLine: {'line': b'   72 |     typename ActionT::Result::SharedPtr \x1b[01;31m\x1b[Kresult\x1b[m\x1b[K;\n'}
[6.797767] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[6.826216] (-) TimerEvent: {}
[6.926600] (-) TimerEvent: {}
[7.026995] (-) TimerEvent: {}
[7.127375] (-) TimerEvent: {}
[7.227770] (-) TimerEvent: {}
[7.328224] (-) TimerEvent: {}
[7.428665] (-) TimerEvent: {}
[7.513942] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[7.514527] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[7.514696] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[7.514973] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.515447] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.515873] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.516042] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.516294] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.516455] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.516602] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.516746] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[7.516906] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[7.517058] (turtlebot3_gazebo) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.517216] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.517416] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.517617] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.517806] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.518019] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:55:123:\x1b[m\x1b[K   required from here\n'}
[7.518158] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[7.518389] (turtlebot3_gazebo) StderrLine: {'line': b'  394 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[7.518550] (turtlebot3_gazebo) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.518696] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[7.518848] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[7.519013] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[7.519158] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.519302] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.519444] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.519581] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.519723] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.519892] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.520046] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.520193] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[7.520339] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[7.520482] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.520721] (turtlebot3_gazebo) StderrLine: {'line': b' 1461 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[7.520878] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.521036] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.521182] (turtlebot3_gazebo) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.521404] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1457:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.521857] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.522033] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.522243] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.522438] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.522618] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.522820] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:55:123:\x1b[m\x1b[K   required from here\n'}
[7.522988] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1375:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.523151] (turtlebot3_gazebo) StderrLine: {'line': b' 1375 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[7.523299] (turtlebot3_gazebo) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.523447] (turtlebot3_gazebo) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.523601] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.523795] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.524115] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.524307] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; CallbackT = std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void>, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.524533] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:55:123:\x1b[m\x1b[K   required from here\n'}
[7.524683] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.524934] (turtlebot3_gazebo) StderrLine: {'line': b' 1398 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[7.525096] (turtlebot3_gazebo) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.525245] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.525465] (turtlebot3_gazebo) StderrLine: {'line': b' 1398 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[7.525613] (turtlebot3_gazebo) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.525762] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.526006] (turtlebot3_gazebo) StderrLine: {'line': b' 1399 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[7.526167] (turtlebot3_gazebo) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.526313] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::_Bind<void (InventoryWaypointsNode::*(InventoryWaypointsNode*, std::_Placeholder<1>))(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)>, std::function<void(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >)>, std::function<void(std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&)>, std::function<void(const std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >)>, std::function<void(std::shared_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.526538] (turtlebot3_gazebo) StderrLine: {'line': b' 1399 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[7.526698] (turtlebot3_gazebo) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.528750] (-) TimerEvent: {}
[7.629075] (-) TimerEvent: {}
[7.729442] (-) TimerEvent: {}
[7.829806] (-) TimerEvent: {}
[7.930187] (-) TimerEvent: {}
[8.030563] (-) TimerEvent: {}
[8.131023] (-) TimerEvent: {}
[8.231398] (-) TimerEvent: {}
[8.331753] (-) TimerEvent: {}
[8.432120] (-) TimerEvent: {}
[8.532495] (-) TimerEvent: {}
[8.632878] (-) TimerEvent: {}
[8.733252] (-) TimerEvent: {}
[8.833639] (-) TimerEvent: {}
[8.934017] (-) TimerEvent: {}
[9.034376] (-) TimerEvent: {}
[9.134757] (-) TimerEvent: {}
[9.235081] (-) TimerEvent: {}
[9.335418] (-) TimerEvent: {}
[9.435881] (-) TimerEvent: {}
[9.536278] (-) TimerEvent: {}
[9.636662] (-) TimerEvent: {}
[9.737053] (-) TimerEvent: {}
[9.837425] (-) TimerEvent: {}
[9.937809] (-) TimerEvent: {}
[10.038195] (-) TimerEvent: {}
[10.138558] (-) TimerEvent: {}
[10.238910] (-) TimerEvent: {}
[10.339284] (-) TimerEvent: {}
[10.439644] (-) TimerEvent: {}
[10.540030] (-) TimerEvent: {}
[10.640409] (-) TimerEvent: {}
[10.740772] (-) TimerEvent: {}
[10.841145] (-) TimerEvent: {}
[10.941524] (-) TimerEvent: {}
[11.041921] (-) TimerEvent: {}
[11.142332] (-) TimerEvent: {}
[11.242749] (-) TimerEvent: {}
[11.343195] (-) TimerEvent: {}
[11.443628] (-) TimerEvent: {}
[11.544067] (-) TimerEvent: {}
[11.644519] (-) TimerEvent: {}
[11.744919] (-) TimerEvent: {}
[11.845238] (-) TimerEvent: {}
[11.945576] (-) TimerEvent: {}
[12.046010] (-) TimerEvent: {}
[12.146328] (-) TimerEvent: {}
[12.246751] (-) TimerEvent: {}
[12.267624] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[12.268333] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[12.268586] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/memory:64\x1b[m\x1b[K,\n'}
[12.268807] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[12.269055] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[12.269277] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[12.269495] (turtlebot3_gazebo) StderrLine: {'line': b'/usr/include/c++/11/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; _Args = {const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&}; _Tp = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[12.269726] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/alloc_traits.h:516:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; _Args = {const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&}; _Tp = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[12.270039] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/buffers/intra_process_buffer.hpp:169:34:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename std::enable_if<std::is_same<DestinationT, std::unique_ptr<MessageT, MessageDeleter> >::value>::type rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::add_shared_impl(rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr) [with DestinationT = std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >; MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; Alloc = std::allocator<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >; MessageDeleter = std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >; BufferT = std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >; typename std::enable_if<std::is_same<DestinationT, std::unique_ptr<MessageT, MessageDeleter> >::value>::type = void; rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr = std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[12.270341] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/buffers/intra_process_buffer.hpp:108:29:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::add_shared(rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr) [with MessageT = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >; Alloc = std::allocator<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >; MessageDeleter = std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >; BufferT = std::unique_ptr<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >, std::default_delete<rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > > >; rclcpp::experimental::buffers::TypedIntraProcessBuffer<MessageT, Alloc, MessageDeleter, BufferT>::MessageSharedPtr = std::shared_ptr<const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[12.270602] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/experimental/buffers/intra_process_buffer.hpp:106:8:\x1b[m\x1b[K   required from here\n'}
[12.270825] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:162:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of deleted function \xe2\x80\x98\x1b[01m\x1b[Krclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >::ClientGoalHandle(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[12.271087] (turtlebot3_gazebo) StderrLine: {'line': b'  162 |         { \x1b[01;31m\x1b[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)\x1b[m\x1b[K; }\n'}
[12.271328] (turtlebot3_gazebo) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[12.271543] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client.hpp:43\x1b[m\x1b[K,\n'}
[12.271754] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/rclcpp_action.hpp:36\x1b[m\x1b[K,\n'}
[12.272001] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointManager.hpp:11\x1b[m\x1b[K,\n'}
[12.272245] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointGenerator.hpp:11\x1b[m\x1b[K,\n'}
[12.272602] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:14\x1b[m\x1b[K,\n'}
[12.272827] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[12.273101] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:59:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >::ClientGoalHandle(const rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >&)\x1b[m\x1b[K\xe2\x80\x99 is implicitly deleted because the default definition would be ill-formed:\n'}
[12.273345] (turtlebot3_gazebo) StderrLine: {'line': b'   59 | class \x1b[01;36m\x1b[KClientGoalHandle\x1b[m\x1b[K\n'}
[12.273565] (turtlebot3_gazebo) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[12.273782] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:59:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of deleted function \xe2\x80\x98\x1b[01m\x1b[Kstd::promise<_Res>::promise(const std::promise<_Res>&) [with _Res = rclcpp_action::ClientGoalHandle<nav2_msgs::action::NavigateToPose_Result_<std::allocator<void> > >::WrappedResult]\x1b[m\x1b[K\xe2\x80\x99\n'}
[12.274043] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18\x1b[m\x1b[K,\n'}
[12.274293] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[12.274511] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[12.274734] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[12.274980] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/future:1100:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[12.275195] (turtlebot3_gazebo) StderrLine: {'line': b' 1100 |       \x1b[01;36m\x1b[Kpromise\x1b[m\x1b[K(const promise&) = delete;\n'}
[12.275378] (turtlebot3_gazebo) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[12.275552] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client.hpp:43\x1b[m\x1b[K,\n'}
[12.275727] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/rclcpp_action.hpp:36\x1b[m\x1b[K,\n'}
[12.275960] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointManager.hpp:11\x1b[m\x1b[K,\n'}
[12.276175] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/WaypointGenerator.hpp:11\x1b[m\x1b[K,\n'}
[12.276354] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:14\x1b[m\x1b[K,\n'}
[12.276524] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[12.276697] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_action/rclcpp_action/client_goal_handle.hpp:59:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of deleted function \xe2\x80\x98\x1b[01m\x1b[Kstd::mutex::mutex(const std::mutex&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[12.276914] (turtlebot3_gazebo) StderrLine: {'line': b'   59 | class \x1b[01;31m\x1b[KClientGoalHandle\x1b[m\x1b[K\n'}
[12.277124] (turtlebot3_gazebo) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[12.277323] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/mutex:43\x1b[m\x1b[K,\n'}
[12.277522] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/future:38\x1b[m\x1b[K,\n'}
[12.277718] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18\x1b[m\x1b[K,\n'}
[12.277934] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[12.278144] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/include/InventoryWaypointsNode.hpp:6\x1b[m\x1b[K,\n'}
[12.278346] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucaslapdoglinux/major_prok_ws/HardCodeHeroesMajorProject/turtlebot3_gazebo/src/InventoryWaypointsNode.cpp:4\x1b[m\x1b[K:\n'}
[12.278549] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_mutex.h:94:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[12.278750] (turtlebot3_gazebo) StderrLine: {'line': b'   94 |     \x1b[01;36m\x1b[Kmutex\x1b[m\x1b[K(const mutex&) = delete;\n'}
[12.278975] (turtlebot3_gazebo) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[12.346867] (-) TimerEvent: {}
[12.447163] (-) TimerEvent: {}
[12.547519] (-) TimerEvent: {}
[12.647869] (-) TimerEvent: {}
[12.748179] (-) TimerEvent: {}
[12.848486] (-) TimerEvent: {}
[12.948795] (-) TimerEvent: {}
[13.049099] (-) TimerEvent: {}
[13.149386] (-) TimerEvent: {}
[13.249697] (-) TimerEvent: {}
[13.350008] (-) TimerEvent: {}
[13.450325] (-) TimerEvent: {}
[13.550616] (-) TimerEvent: {}
[13.650947] (-) TimerEvent: {}
[13.751325] (-) TimerEvent: {}
[13.826815] (turtlebot3_gazebo) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/turtlebot3_shop_keeper.dir/build.make:90: CMakeFiles/turtlebot3_shop_keeper.dir/src/InventoryWaypointsNode.cpp.o] Error 1\n'}
[13.827367] (turtlebot3_gazebo) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:143: CMakeFiles/turtlebot3_shop_keeper.dir/all] Error 2\n'}
[13.827673] (turtlebot3_gazebo) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[13.830619] (turtlebot3_gazebo) CommandEnded: {'returncode': 2}
[13.851446] (-) TimerEvent: {}
[13.908507] (turtlebot3_gazebo) JobEnded: {'identifier': 'turtlebot3_gazebo', 'rc': 2}
[13.965077] (-) TimerEvent: {}
[13.965430] (-) EventReactorShutdown: {}
